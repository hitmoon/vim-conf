
filetype on
set fileencodings=utf-8,gbk
syntax enable
"set autoindent 
set showcmd
set showmode
"set incsearch
set paste
set nobackup
set fdm=manual
set nu
set background=dark
set title
let g:solarized_termtrans=1
colorscheme solarized

hi Visual       term=reverse    ctermfg=black   ctermbg=darkCyan
func ChangeLog()
	language en_US.UTF-8
	call append(line("."), "* ".strftime("%a %b %d %Y")." xiaoqiang zhao <xiaoqiang.zhao@i-soft.com.cn> - ")
	call cursor(line(".") + 1, col("$") - 1)
	call cursor(line("."), col("$"))
	language zh_CN.UTF-8
endfunc

func Formatdiff()
	exec '%s@\s*$@@'
endfunc

func! AddStamp()
	language en_US.UTF-8
	call append(line("."), "Added by hitmoon, time: ".strftime("%c"))
	call cursor(line(".") + 1, 0)
	language zh_CN.UTF-8
endfunc

func! AddComment()
	if &filetype == 'c' || &filetype == 'cpp'
		call append(line("."), "/*")
		call append(line(".")+1, " *")
		call cursor(line(".")+2, 3)
	endif
endfunc

" compile and run 
let s:makeflag = "-j 3"

func! CompileAndRun()
	exec "w"
	exec "make".s:makeflag
endfunc

func! Setup_python()
	setlocal tabstop=4
	setlocal shiftwidth=4
	setlocal expandtab
endfunc

func! Setup_indent()
	let l:path=expand('%:p')
	setlocal cmdheight=2
	if l:path =~ 'linux' || l:path =~ 'kernel'
	  echom "[linux C] indent "
	  call Setup_linux()
	else
	  echom "[normal C] indent "
	  call Setup_c()
	endif
	setlocal cmdheight=1
endfunc

func! Setup_c()
	setlocal tabstop=4
	setlocal shiftwidth=4
	setlocal cindent
	setlocal expandtab
endfunc

func! Setup_linux()
	setlocal tabstop=8
	setlocal shiftwidth=8
	setlocal cindent
endfunc

nmap <silent> <F4> :call AddStamp()<CR>o
nmap <silent> <F5> :call ChangeLog()<CR>a
nmap <silent> <F6> :call AddComment()<CR>a
nmap <up> gk
nmap <down> gj
nmap <silent> <F7> :call Formatdiff()<CR>

nmap <silent> <F2> :nohlsearch<CR>
imap <silent> <F2> <C-O>:nohlsearch<CR>

au FileType c,cpp call Setup_indent()
au FileType python call Setup_python()
